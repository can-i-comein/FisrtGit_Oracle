-- 함수 : 컬럼의 값을 읽어서 계산한 결과를 리턴
-- 단일행 함수 : N개의 값을 읽어서 N개의 결과를 리턴
-- 그룹 함수 : N개의 값을 읽어서 1개의 결과 리턴
-- 함수를 사용할 수 있는 위치 : SELECT, WHERE, GROUP BY, HAVING, ORDER BY

-- 단일 행 함수
-- 문자 관련 함수
-- LENGTH(길이) / LENGTHB (바이트 크기)
SELECT LENGTH('오라클'), LENGTHB('오라클') FROM DUAL; --DUAL 가상테이블
SELECT LENGTH(EMAIL), LENGTH(EMAIL) FROM EMPLOYEE;
SELECT EMP_NAME, LENGTH(EMP_NAME), LENGTHB(EMP_NAME) FROM EMPLOYEE;

--INSTR (인덱스 1부터 시작) : 해당 문자 찾기
SELECT INSTR('AABAACAABBAA', 'B'), INSTR('AABAACAABBAA', 'A') FROM DUAL;
SELECT INSTR('AABAACAABBAA', 'B', 7) FROM DUAL;
SELECT INSTR('AABAACAABBAA', 'B', -1) FROM DUAL;
SELECT INSTR('AABAACAABBAA', 'A', -3) FROM DUAL;
SELECT INSTR('AABAACAABBAA', 'B', 1, 2) FROM DUAL;
SELECT INSTR('AABAACAABBAA', 'C', 1, 2) FROM DUAL;

-- EMPLOYEE 테이블에서 이메일 @ 위치
SELECT EMAIL, INSTR(EMAIL, '@') FROM EMPLOYEE;

--LPAD/RPAD (N개의 자리를 만들고 비어있는곳에 채워넣기)
SELECT LPAD(EMAIL, 20), RPAD(EMAIL, 20) FROM EMPLOYEE;
--     sun_di@kh.or.kr
--sun_di@kh.or.kr     
SELECT LPAD(EMAIL, 20, '#'), RPAD(EMAIL, 20, '#') FROM EMPLOYEE;

-- LTRIM/RTRIM
SELECT LTRIM('    KH') A, LTRIM('   KH   ') B, LTRIM('KH   ') C FROM DUAL;
SELECT RTRIM('    KH') A, RTRIM('   KH   ') B, RTRIM('KH   ') C FROM DUAL;
SELECT LTRIM('0001234', '0'), LTRIM('123123KH123', '123'), LTRIM('ACABACCKH', 'ABC') FROM DUAL;
SELECT RTRIM('0001234', '0'), RTRIM('123123KH123', '123'), RTRIM('ACABACCKH', 'ABC') FROM DUAL;
--TRIM
SELECT TRIM('   KH   ') A, TRIM('Z' FROM 'ZZZKHZZZ') FROM DUAL;
SELECT TRIM('0123456789' FROM '234KH0954') FROM DUAL;
SELECT TRIM(LEADING 'Z' FROM 'ZKHZ'),
       TRIM(TRAILING 'Z' FROM 'ZKHZ'),
       TRIM(BOTH 'Z' FROM 'ZKHZ')
FROM DUAL;

-- SUBSTR(N번째 부터 N개 출력)
SELECT SUBSTR('HELLOMYGOODFRIENDS', 7) FROM DUAL;
SELECT SUBSTR('HELLOMYGOODFRIENDS', 5, 2) FROM DUAL;
SELECT SUBSTR('HELLOMYGOODFRIENDS', 5, 0) FROM DUAL;
SELECT SUBSTR('HELLOMYGOODFRIENDS', -8, 3) FROM DUAL;

-- EMPLOYEE 테이블의 이름, 이메일, @이후를 제외한 아이디 조회
SELECT EMP_NAME, EMAIL, SUBSTR(EMAIL, 1, INSTR(EMAIL, '@')-1) ID 
FROM EMPLOYEE;
-- EMPLOYEE 테이블에서 이름과 주민번호에서 성별을 나타내는 부분 조회
SELECT EMP_NAME, SUBSTR(EMP_NO,INSTR(EMP_NO, '-')+1 ,1)성별 
FROM EMPLOYEE;
-- EMPLOYEE 테이블에서 직원들의 주민번호를 이용하여 사원 명, 생년, 생월, 생일 조회
SELECT EMP_NAME, SUBSTR(EMP_NO, 1,2) 생년,SUBSTR(EMP_NO, 3,2) 생월,SUBSTR(EMP_NO, 5,2) 생일 
FROM EMPLOYEE;

SELECT EMP_NAME, '남자' 성별
FROM EMPLOYEE
WHERE SUBSTR(EMP_NO,INSTR(EMP_NO, '-')+1 ,1) = 1;

SELECT EMP_NAME, '여자' 성별
FROM EMPLOYEE
WHERE SUBSTR(EMP_NO,INSTR(EMP_NO, '-')+1 ,1) = 2;

-- LOWER/UPPER/INITCAP
SELECT LOWER('Welcome To My World'),
       UPPER('Welcome To My World'),
       INITCAP('welcome to my world')
FROM DUAL;

-- CONCAT : 문자열 연결
SELECT CONCAT('가나다라', 'ABCD'), '가나다라'||'ABCD' FROM DUAL;

-- REPLACE
SELECT REPLACE('서울시 강남구 역삼동', '역삼동', '삼성동') FROM DUAL;
SELECT REPLACE('가나다라마바사', '다라', '아자') FROM DUAL;

-- EMPLOYEE 테이블에서 사원 명, 주민번호 조회
-- 단, 주민번호는 생년월일만 보이게 하고 '-' 다음 값은 '*'로 변경
SELECT EMP_NAME, SUBSTR(EMP_NO,1,INSTR(EMP_NO, '-')) || '*******'
FROM EMPLOYEE;

SELECT EMP_NAME, CONCAT(SUBSTR(EMP_NO,1,INSTR(EMP_NO, '-')), '*******')
FROM EMPLOYEE;

SELECT EMP_NAME, RPAD(SUBSTR(EMP_NO, 1 , INSTR(EMP_NO, '-')), LENGTH(EMP_NO), '*')
FROM EMPLOYEE;

SELECT EMP_NAME, REPLACE(EMP_NO,SUBSTR(EMP_NO, INSTR(EMP_NO, '-')+1), '*******')
FROM EMPLOYEE;







-- 숫자 관련 함수
-- ABS : 절댓값
SELECT ABS(10.9), ABS(-10.9), ABS(10), ABS(-10) FROM DUAL;

-- MOD : 나머지 구하기
SELECT MOD(10,3), MOD(-10,3), MOD(-10,-3), MOD(10.9,3) FROM DUAL;

-- ROUND : 반올림 (소수점 첫번째 자리 = 0)
SELECT ROUND(123.456), ROUND(123.654) FROM DUAL;
SELECT ROUND(123.678, 0), ROUND(123.456, 1), ROUND(123.456,2),
    ROUND(123.456, -2) FROM DUAL;
    
-- FLOOR, TRUNC, CEIL : 내림, 절삭 ,올림 
SELECT FLOOR(123.456), FLOOR(123.765) FROM DUAL;
SELECT CEIL(123.456), CEIL(123.765) FROM DUAL;
SELECT TRUNC(123.456), TRUNC(123.765) FROM DUAL;
SELECT TRUNC(123.456,0), TRUNC(123,456,1), TRUNC(123,456, -1) FROM DUAL;
SELECT FLOOR(-1.1), TRUNC(-1.1) FROM DUAL;






-- 날짜 관련 함수
-- MONTHS_BETWEEN
-- EMPLOYEE 테이블에서 사원의 이름, 입사일, 근무 개월수 조회
SELECT EMP_NAME, HIRE_DATE, CEIL(ABS(MONTHS_BETWEEN(SYSDATE, HIRE_DATE))) || '개월차' 
FROM EMPLOYEE;

-- ADD MONTHS : 현재 날짜 + 월수
SELECT ADD_MONTHS(SYSDATE, 5), ADD_MONTHS(SYSDATE ,10) FROM DUAL;

-- NEXT_DAY (일요일 = 1)
SELECT SYSDATE, NEXT_DAY(SYSDATE, '목요일'), NEXT_DAY(SYSDATE,5), NEXT_DAY(SYSDATE, '목'),
        NEXT_DAY(SYSDATE, '목이 아플 땐 이클립스')
FROM DUAL;
-- 문제점 : 한글은 첫글자만 요일이면 어떤 문자열이던 모두 가능
ALTER SESSION SET NLS_LANGUAGE = AMERICAN;
SELECT SYSDATE, NEXT_DAY(SYSDATE, 'MONDAY'), NEXT_DAY(SYSDATE, 'MON'),
        NEXT_DAY(SYSDATE, 'MONSTER')
FROM DUAL;

ALTER SESSION SET NLS_LANGUAGE = KOREAN;

-- LAST_DAY
SELECT LAST_DAY(SYSDATE) FROM DUAL;

-- EMPLOYEE 테이블에서 사원명, 입사일, 입사한 달의 근무일 수 조회
SELECT EMP_NAME, HIRE_DATE, LAST_DAY(HIRE_DATE) - HIRE_DATE
FROM EMPLOYEE;
-- EMPLOYEE 테이블에서 근무년수가 20년 이상인 직원 정보 조회
SELECT * FROM EMPLOYEE
--WHERE (SYSDATE - HIRE_DATE)/365 >= 20;
--WHERE MONTHS_BETWEEN(SYSDATE, HIRE_DATE)/12 >= 20;
WHERE ADD_MONTHS(HIRE_DATE, 240) <= SYSDATE;

-- EXTRACT
-- EMPLOYEE 테이블에서 사원의 이름, 입사 년, 입사 월, 입사일 조회
SELECT EMP_NAME,
        EXTRACT(YEAR FROM HIRE_DATE) "입사년도",
        EXTRACT(MONTH FROM HIRE_DATE) "입사 월",
        EXTRACT(DAY FROM HIRE_DATE) "입사 일"
FROM EMPLOYEE
ORDER BY "입사년도", "입사 월", "입사 일";

-- EMPLOYEE 테이블에서 사원의 이름, 입사일, 근무년수 (현재년도 - 입사년도) 조회
SELECT EMP_NAME, HIRE_DATE, EXTRACT(YEAR FROM SYSDATE) - EXTRACT(YEAR FROM HIRE_DATE)근무년수
FROM EMPLOYEE; 





-- 형변환 함수
-- TO_CHAR : 날짜/숫자 데이터를 문자 데이터로 변경
SELECT 1234, TO_CHAR(1234) FROM DUAL;
SELECT TO_CHAR(1234) + 4321 FROM DUAL;
SELECT TO_CHAR(1234, '99999') A, TO_CHAR(1234, '00000') B
FROM DUAL;
-- 9 -> 빈칸, 0 -> 0으로 채워넣음 (0,9밖에 안됨)
SELECT TO_CHAR(1234, 'L99999'), TO_CHAR(1234, '$99999'),
        TO_CHAR(1234, 'FML99999'), TO_CHAR(1234, 'FM$99999')
FROM DUAL;
SELECT TO_CHAR(1234, '99,999'), TO_CHAR(1234, 'FM99,999') FROM DUAL;
SELECT TO_CHAR(1234, '999') FROM DUAL;

-- EMPLOYEE테이블에서 사원 명, 급여 (\9,000,000 형식) 조회
SELECT EMP_NAME, TO_CHAR(SALARY, 'FML999,999,999') FROM EMPLOYEE;

SELECT TO_CHAR(SYSDATE, 'YYYY-MM - DD DAY HH:MI:SS'),
        TO_CHAR(SYSDATE, 'YYYY"년" MM"월" DD"일" DAY HH:MT:SS'),
        TO_CHAR(SYSDATE, 'YYYY-FMMM-DD DAY HH24:MI:SS')
        FROM DUAL;

SELECT TO_CHAR(SYSDATE, 'YYYY'), TO_CHAR(SYSDATE, 'YY'), TO_CHAR(SYSDATE, 'YEAR')
FROM DUAL;

SELECT TO_CHAR(SYSDATE, 'MM'), TO_CHAR(SYSDATE, 'MONTH'), TO_CHAR(SYSDATE, 'MON'),
TO_CHAR(SYSDATE, 'RM') FROM DUAL;
SELECT TO_CHAR(SYSDATE, 'DDD'), TO_CHAR(SYSDATE, 'DD'), TO_CHAR(SYSDATE, 'D') 
FROM DUAL;
SELECT TO_CHAR(SYSDATE, 'Q'), TO_CHAR(SYSDATE, 'DAY'), TO_CHAR(SYSDATE, 'DY') FROM DUAL;

-- TO_DATE : 문자/숫자 데이터를 날짜 데이터로 변환
SELECT TO_DATE('20100101', 'YYYYMMDD'), TO_DATE(20100101, 'YYYYMMDD'),
        TO_DATE(20100101), T0_DATE('20100101')
FROM DUAL;
SELECT TO_CHAR(TO_DATE('250919 175014', 'YYMMDD HH24MISS'), 'YY-MM-DD PM HH:MI:SS DY') FROM DUAL;
SELECT TO_CHAR(TO_DATE(980606, 'YYMMDD'), 'YYYYMMDD'), TO_CHAR(TO_DATE(980606, 'RRMMDD'), 'YYYYMMDD'),
    TO_CHAR(TO_DATE(180606, 'YYMMDD'), 'YYYYMMDD'), TO_CHAR(TO_DATE(180606, 'RRMMDD'), 'YYYYMMDD')
FROM DUAL;


-- TO_NUMBER : 문자 데이터를 숫자로 변환
SELECT TO_NUMBER('123456') FROM DUAL;
SELECT '123' + '321' FROM DUAL;
SELECT TO_NUMBER('1,000,000', '999,999,999') + TO_NUMBER('2,000,000', '999,999,999')
FROM DUAL;









-- NULL처리 함수
SELECT EMP_NAME, SALARY*(1+BONUS)*12 FROM EMPLOYEE;
SELECT EMP_NAME, BONUS, NVL(BONUS, 0) FROM EMPLOYEE;
SELECT EMP_NAME, SALARY, BONUS, SALARY*(1+NVL(BONUS, 0)*12 계산 FROM EMPLOYEE;









-- 선택함수
-- DECODE(계산식|컬럼명, 조건값1, 선택값1, 조건값2, 선택값2, ....)
SELECT EMP_ID, EMP_NAME, EMP_NO, 
        DECODE(SUBSTR(EMP_NO, INSTR(EMP_NO, '-')+1, 1), 1, '남', 2, '여') 성별1,
        DECODE(SUBSTR(EMP_NO, INSTR(EMP_NO, '-')+1, 1),1 ,'남', '여') 성별2
FROM EMPLOYEE;

-- 직원의 급여를 인상하고자 한다
-- 직급코드가 J7인 직원은 급여의 10% 인상, 직급코드가 J6인 직원은 15%,
-- 직급코드가 J5인 직원은 20%, 그 외 직급의 직원은 급여의 5% 인상
-- EMPLOYEE 테이블에서 직원명, 직급코드, 급여, 인상급여 조회

SELECT EMP_NAME, JOB_CODE, SALARY, 
        DECODE(JOB_CODE, 'J7', SALARY*1.1,
                         'J6', SALARY*1.15,
                         'J5', SALARY*1.2,
                         SALARY*1.05) 인상급여
FROM EMPLOYEE;
SELECT EMP_NAME, JOB_CODE, SALARY,
        SALARY*(1+DECODE(JOB_CODE, 'J7', 0.1, 'J6', 0.15, 'J5', 0.2, 0.05)) 인상급여
FROM EMPLOYEE;

-- CASE WHEN 조건식 THEN 결과값
--      WHEN 조건식 THEN 결과값
--      ELSE 결과값
-- END
SELECT EMP_ID, EMP_NAME, EMP_NO,
        CASE WHEN SUBSTR(EMP_NO, INSTR(EMP_NO, '-')+1,1) = 1 THEN '남'
           --WHEN SUBSTR(EMP_NO, INSTR(EMP_NO, '-')+1,1) = 2 THEN '여'
           ELSE '여'
        END 성별
FROM EMPLOYEE;

SELECT EMP_ID, EMP_NAME, EMP_NO,
        CASE SUBSTR(EMP_NO, INSTR(EMP_NO, '-')+1,1) WHEN '1' THEN '남'
             ELSE '여'
        END 성별
FROM EMPLOYEE;

SELECT EMP_NAME, JOB_CODE, SALARY,
        CASE WHEN JOB_CODE = 'J7' THEN SALARY*1.1
             WHEN JOB_CODE = 'J6' THEN SALARY*1.15
             WHEN JOB_CODE = 'J5' THEN SALARY*1.2
             ELSE SALARY*1.05
        END 인상급여
FROM EMPLOYEE;

SELECT EMP_NAME, JOB_CODE, SALARY,
        CASE JOB_CODE WHEN 'J7' THEN SALARY*1.1
                      WHEN 'J6' THEN SALARY*1.15
                      WHEN 'J5' THEN SALARY*1.2
                      ELSE SALARY*1.05
        END 인상급여
FROM EMPLOYEE;


-- 급여가 500만보다 크면 1등급, 350만보다 크면 2등급, 200만보다 크면 3등급, 나머지 4등급
SELECT EMP_ID, EMP_ID, SALARY,
    CASE WHEN SALARY > 5000000 THEN '1등급'
         WHEN SALARY > 3500000 THEN '2등급'
         WHEN SALARY > 2000000 THEN '3등급'
         ELSE '4등급'
    END 등급
FROM EMPLOYEE;









-- 그룹 함수
-- SUM : 총합
SELECT SUM(SALARY) FROM EMPLOYEE;
SELECT SUM(SALARY) FROM EMPLOYEE WHERE SUBSTR(EMP_NO, INSTR(EMP_NO, '-')+1, 1) =1;

-- AVG : 평균 (NULL은 계산에서 제외)
SELECT AVG(SALARY) FROM EMPLOYEE;
SELECT AVG(BONUS) FROM EMPLOYEE;
SELECT AVG(NVL(BONUS,0)) FROM EMPLOYEE;

-- MIN/MAX
SELECT MIN(SALARY), MIN(EMP_NAME), MIN(HIRE_DATE) FROM EMPLOYEE;
SELECT MAX(SALARY), MAX(EMP_NAME), MAX(HIRE_DATE) FROM EMPLOYEE;

-- COUNT
SELECT COUNT(*), COUNT(BONUS) FROM EMPLOYEE;








